{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["openingTimeoutRef","IndexPage","location","useState","isArticleVisible","setIsArticleVisible","hasTimeout","setHasTimeout","isVisible","setIsVisible","article","setArticle","loading","setLoading","wrapperRef","setWrapperRef","toggleArticle","useCallback","handleOpenArticle","selectedArticle","handleCloseArticle","handleOutsideClick","event","contains","target","useEffect","setTimeout","document","addEventListener","clearTimeout","removeEventListener","className","id","onOpenArticle","timeout","openArticle","onCloseArticle"],"mappings":"2FAAA,4CAIIA,EAAoB,KAsETC,UApEG,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACcC,oBAAS,GAAlDC,EAD2B,KACTC,EADS,OAEEF,oBAAS,GAAtCG,EAF2B,KAEfC,EAFe,OAGAJ,oBAAS,GAApCK,EAH2B,KAGhBC,EAHgB,OAIJN,mBAAS,IAAhCO,EAJ2B,KAIlBC,EAJkB,OAKJR,mBAAS,cAAhCS,EAL2B,KAKlBC,EALkB,OAMEV,mBAAS,MAAtCW,EAN2B,KAMfC,EANe,KAQ5BC,EAAgBC,uBAAY,WAChCZ,GAAqBD,GACrBG,GAAeD,GACfG,GAAcD,KACb,CAACA,EAAWF,EAAYF,IAErBc,EAAoBD,uBACxB,SAACE,GACCH,IACAL,EAAWQ,KAEb,CAACH,IAGGI,EAAqBH,uBAAY,WACrCD,IACAL,EAAW,MACV,CAACK,IAEEK,EAAqBJ,uBACzB,SAACK,GACKR,IAAeA,EAAWS,SAASD,EAAME,SAAWpB,GAAkBgB,MAE5E,CAAChB,EAAkBU,EAAYM,IAgBjC,OAbAK,qBAAU,WAOR,OANAzB,EAAoB0B,YAAW,WAC7Bb,EAAW,MACV,KAEHc,SAASC,iBAAiB,YAAaP,GAEhC,WACDrB,GAAmB6B,aAAa7B,GACpC2B,SAASG,oBAAoB,YAAaT,MAE3C,CAACA,IAGF,kBAAC,IAAD,CAAQnB,SAAUA,GAChB,6BAAS6B,UAAS,QAAUnB,EAAV,KAAqBR,EAAmB,qBAAuB,KAC/E,6BAAS4B,GAAG,WACV,kBAAC,IAAD,CAAQC,cAAef,EAAmBgB,QAAS5B,IACnD,kBAAC,IAAD,CACE4B,QAAS5B,EACTE,UAAWA,EACX2B,YAAazB,EACbN,iBAAkBA,EAClBgC,eAAgBhB,EAChBL,cAAeA,IAEjB,kBAAC,IAAD,CAAQmB,QAAS5B,KAEnB,6BAAS0B,GAAG","file":"component---src-pages-index-js-5ea7b581037db3595406.js","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react'\n\nimport { Header, Main, Footer, Layout } from '../components'\n\nlet openingTimeoutRef = null\n\nconst IndexPage = ({ location }) => {\n  const [isArticleVisible, setIsArticleVisible] = useState(false)\n  const [hasTimeout, setHasTimeout] = useState(false)\n  const [isVisible, setIsVisible] = useState(false)\n  const [article, setArticle] = useState('')\n  const [loading, setLoading] = useState('is-loading')\n  const [wrapperRef, setWrapperRef] = useState(null)\n\n  const toggleArticle = useCallback(() => {\n    setIsArticleVisible(!isArticleVisible)\n    setHasTimeout(!hasTimeout)\n    setIsVisible(!isVisible)\n  }, [isVisible, hasTimeout, isArticleVisible])\n\n  const handleOpenArticle = useCallback(\n    (selectedArticle) => {\n      toggleArticle()\n      setArticle(selectedArticle)\n    },\n    [toggleArticle],\n  )\n\n  const handleCloseArticle = useCallback(() => {\n    toggleArticle()\n    setArticle('')\n  }, [toggleArticle])\n\n  const handleOutsideClick = useCallback(\n    (event) => {\n      if (wrapperRef && !wrapperRef.contains(event.target) && isArticleVisible) handleCloseArticle()\n    },\n    [isArticleVisible, wrapperRef, handleCloseArticle],\n  )\n\n  useEffect(() => {\n    openingTimeoutRef = setTimeout(() => {\n      setLoading('')\n    }, 100)\n\n    document.addEventListener('mousedown', handleOutsideClick)\n\n    return () => {\n      if (openingTimeoutRef) clearTimeout(openingTimeoutRef)\n      document.removeEventListener('mousedown', handleOutsideClick)\n    }\n  }, [handleOutsideClick])\n\n  return (\n    <Layout location={location}>\n      <article className={`body ${loading} ${isArticleVisible ? 'is-article-visible' : ''}`}>\n        <section id=\"wrapper\">\n          <Header onOpenArticle={handleOpenArticle} timeout={hasTimeout} />\n          <Main\n            timeout={hasTimeout}\n            isVisible={isVisible}\n            openArticle={article}\n            isArticleVisible={isArticleVisible}\n            onCloseArticle={handleCloseArticle}\n            setWrapperRef={setWrapperRef}\n          />\n          <Footer timeout={hasTimeout} />\n        </section>\n        <section id=\"bg\" />\n      </article>\n    </Layout>\n  )\n}\n\nexport default IndexPage\n"],"sourceRoot":""}